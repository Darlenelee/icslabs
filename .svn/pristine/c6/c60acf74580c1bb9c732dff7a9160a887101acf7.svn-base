#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
# Yijun Li 516030910395
#
# Describe how and why you modified the baseline code.
# 1. use iaddq
# 2. 
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	iaddq $-4, %rdx
	andq %rdx,%rdx		# len-4 <= 0?
	jl Rest		

Loop:	
	mrmovq (%rdi), %r10	 # read val from src...
	mrmovq 8(%rdi), %r11
	mrmovq 16(%rdi), %r12
	mrmovq 24(%rdi), %r13
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle NposA		# if so, goto NposA:
	iaddq $1, %rax		# count++

NposA:	
	rmmovq %r11, 8(%rsi)
	andq %r11, %r11
	jle NposB
	iaddq $1, %rax

NposB:

	rmmovq %r12, 16(%rsi)
	andq %r12, %r12
	jle NposC
	iaddq $1, %rax
NposC:
	rmmovq %r13, 24(%rsi)
	andq %r13, %r13
	jle New
	iaddq $1, %rax
New:
	iaddq $0x20, %rdi		# src++
	iaddq $0x20, %rsi		# dst++
	iaddq $-4, %rdx		# len--
	jge Loop			# if so, goto Loop:

Rest:
	iaddq $4, %rdx
	iaddq $-1, %rdx
	jl Done # %rdx == 0
	# %rdx==1,2,3
	mrmovq (%rdi), %r10
	mrmovq 8(%rdi), %r11
	mrmovq 16(%rdi), %r12
	rmmovq %r10, (%rsi)
	andq %r10, %r10
	jle Npos_1 # (%rdi) <= 0 doesn't count 
	iaddq $1 ,%rax
Npos_1:
	iaddq $-1, %rdx
	jl Done # %rdx ==1
	rmmovq %r11, 8(%rsi) # %rdx ==2
	andq %r11,%r11
	jle Npos_2
	iaddq $1, %rax
Npos_2:
	iaddq $-1, %rdx
	jl Done # %rdx ==1
	rmmovq %r12, 16(%rsi) # %rdx ==3
	andq %r12,%r12
	jle Done
	iaddq $1, %rax
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
